.button-arrow-r-3d {
  /* DEFAULT
  height: "220px";
  width: "80px"

  Scale 100% depend on its container size
   */
  width: 100%;
  height: 100%;
  /**/

  --button-radius: 15px;
  /**/
  border-radius: var(--button-radius);
  outline: none;
  cursor: pointer;
  background: transparent;
  letter-spacing: -1px;
  border: 0;
  position: relative;
}

.button-arrow-shadow {
  position: absolute;
  inset: 0;
  border-radius: inherit;
  filter: blur(1px);
}

.button-arrow-shadow::before,
.button-arrow-shadow::after {
  content: "";
  position: absolute;
  inset: 0;
  border-radius: calc(var(--button-radius) * 1.1);
  background: var(--secondary-button-darker-color);
  filter: brightness(0.8);
}

.button-arrow-shadow::before {
  filter: drop-shadow(-14px 15px 10px var(--secondary-button-darker-color)) brightness(0.6);
  transition: all 0.3s ease;
}

.button-arrow-text-background {
  border-radius: inherit;
  overflow: hidden;
  height: 100%;
  transform: translate(6px, -6px);
  padding: 3px;
  background: linear-gradient(to bottom,
      var(--secondary-button-highlight-lighter-color) 0%,
      var(--secondary-button-color) 100%);
  position: relative;
  transition: all 0.3s ease;
}

.button-border-outline {
  position: absolute;
  overflow: hidden;
  inset: 0;
  opacity: 0;
  outline: none;
  border-radius: inherit;
  transition: all 0.4s ease;
}

.button-border-outline::before {
  content: "";
  position: absolute;
  inset: 2px;
  width: 120px;
  height: 300px;
  margin: auto;
  background: linear-gradient(to right,
      transparent 0%,
      var(--special-color) 50%,
      transparent 100%);
  animation: spin 3s linear infinite;
  animation-play-state: paused;
}

.content-container {
  pointer-events: none;
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 1;
  position: relative;
  height: 100%;
  gap: 16px;
  border-radius: calc(var(--button-radius) * 0.85);
  font-weight: 600;
  transition: all 0.3s ease;
  background: linear-gradient(to bottom,
      var(--secondary-button-highlight-color) 0%,
      var(--secondary-button-color) 100%);
  box-shadow:
    inset -2px 12px 11px -5px var(--secondary-button-highlight-lighter-color),
    inset 1px -3px 11px 0px rgb(0 0 0 / 35%);
}

.content-text {
  transition: all 0.3s ease;
  display: flex;
  align-items: center;
  justify-content: center;
}

.content-text span {
  display: block;
  color: transparent;
  position: relative;
}

.content-text span:nth-child(5) {
  margin-left: 5px;
}

.content-text.state-1 span:nth-child(5) {
  margin-right: -3px;
}

.content-text.state-1 span {
  animation: stringAppear 1.2s ease backwards calc(var(--c) * 0.03s);
}

.content-text.state-1 span::before,
.content-text span::after {
  content: attr(data-label);
  position: absolute;
  color: var(--primary-text-color);
  text-shadow: -1px 1px 2px var(--secondary-button-color);
  left: 0;
}

.content-text span::before {
  opacity: 0;
  transform: translateY(-100%);
}

.content-text.state-2 {
  position: absolute;
  left: 80px;
}

.content-text.state-2 span::after {
  opacity: 1;
}

.arrow-icon {
  animation: resetArrow 0.8s cubic-bezier(0.7, -0.5, 0.3, 1.2) forwards;
  z-index: 10;
}

.arrow-icon div,
.arrow-icon div::before,
.arrow-icon div::after {
  height: 3px;
  border-radius: 1px;
  background-color: var(--primary-text-color);
}

.arrow-icon div::before,
.arrow-icon div::after {
  content: "";
  position: absolute;
  right: 0;
  transform-origin: center right;
  width: 14px;
  border-radius: 15px;
  transition: all 0.3s ease;
}

.arrow-icon div {
  position: relative;
  width: 24px;
  box-shadow: -2px 2px 5px var(--secondary-button-color);
  transform: scale(0.9);
  background: var(--primary-text-color);
  animation: swingArrow 1s ease-in-out infinite;
  animation-play-state: paused;
}

.arrow-icon div::before {
  transform: rotate(44deg);
  top: 1px;
  box-shadow: 1px -2px 3px -1px var(--secondary-button-color);
  animation: rotateArrowLine 1s linear infinite;
  animation-play-state: paused;
}

.arrow-icon div::after {
  bottom: 1px;
  transform: rotate(316deg);
  box-shadow: -2px 2px 3px 0 var(--secondary-button-color);
  background: var(--primary-text-color);
  animation: rotateArrowLine2 1s linear infinite;
  animation-play-state: paused;
}

.rotate-arrow-line-path {
  position: absolute;
  z-index: 12;
  bottom: 0;
  left: 0;
  right: 0;
  stroke-dasharray: 150 480;
  stroke-dashoffset: 150;
  pointer-events: none;
}

.button-arrow-splash-effect {
  position: absolute;
  top: 0;
  left: 0;
  pointer-events: none;
  stroke-dasharray: 60 60;
  stroke-dashoffset: 60;
  transform: translate(-17%, -31%);
  stroke: var(--special-color);
}

/** STATES */
.button-arrow-r-3d:hover .content-text.state-1 span::before {
  animation: stringAppear 0.7s ease calc(var(--c) * 0.03s);
}

.button-arrow-r-3d:hover .content-text.state-1 span::after {
  opacity: 1;
  animation: stringDisappear 0.7s ease calc(var(--c) * 0.03s);
}

.button-arrow-r-3d:hover .button-arrow-text-background {
  transform: translate(8px, -8px);
}

.button-arrow-r-3d:hover .button-border-outline {
  opacity: 1;
}

.button-arrow-r-3d:hover .button-border-outline::before,
.button-arrow-r-3d:hover .arrow-icon div::before,
.button-arrow-r-3d:hover .arrow-icon div::after,
.button-arrow-r-3d:hover .arrow-icon div {
  animation-play-state: running;
}

.button-arrow-r-3d:active .button-arrow-shadow::before {
  filter: blur(5px);
  opacity: 0.7;
  box-shadow:
    -7px 6px 0 0 rgb(115 75 155 / 40%),
    -14px 12px 0 0 rgb(115 75 155 / 25%),
    -21px 18px 4px 0 rgb(115 75 155 / 15%);
}

.button-arrow-r-3d:active .content-container {
  box-shadow:
    inset -1px 12px 8px -5px rgba(71, 0, 137, 0.4),
    inset 0px -3px 8px 0px var(--secondary-button-highlight-color);
  filter: brightness(1.1);
}

.button-arrow-r-3d:active .button-border-outline {
  opacity: 0;
}

.button-arrow-r-3d:active .button-arrow-text-background {
  transform: translate(3px, -3px);
}

.button-arrow-r-3d:active .button-arrow-splash-effect {
  animation: button-arrow-splash-effect 0.8s cubic-bezier(0.3, 0, 0, 1) forwards 0.05s;
}

.button-arrow-r-3d:focus .rotate-arrow-line-path {
  animation: rotate-arrow-line-path 1.6s ease forwards 0.2s;
}

.button-arrow-r-3d:focus .arrow-icon {
  animation: arrow 1s cubic-bezier(0.7, -0.5, 0.3, 1.5) forwards;
}

.content-text.state-2 span::after,
.button-arrow-r-3d:focus .content-text.state-1 span {
  animation: stringDisappear 0.5s ease forwards calc(var(--c) * 0.03s);
}

.button-arrow-r-3d:focus .content-text.state-2 span::after {
  animation: stringAppear 1s ease backwards calc(var(--c) * 0.03s);
}

@keyframes spin {
  0% {
    transform: rotate(0deg);
  }

  100% {
    transform: rotate(360deg);
  }
}

@keyframes stringAppear {
  0% {
    transform: translateY(50%);
    opacity: 0;
    filter: blur(20px);
  }

  20% {
    transform: translateY(70%);
    opacity: 1;
  }

  50% {
    transform: translateY(-15%);
    opacity: 1;
    filter: blur(0);
  }

  100% {
    transform: translateY(0);
    opacity: 1;
  }
}

@keyframes stringDisappear {
  0% {
    transform: translateY(0);
    opacity: 1;
  }

  100% {
    transform: translateY(-70%);
    opacity: 0;
    filter: blur(3px);
  }
}

@keyframes arrow {
  0% {
    opacity: 1;
  }

  50% {
    transform: translateX(60px);
    opacity: 0;
  }

  51% {
    transform: translateX(-200px);
    opacity: 0;
  }

  100% {
    transform: translateX(-128px);
    opacity: 1;
  }
}

@keyframes swingArrow {
  50% {
    transform: translateX(5px) scale(0.9);
  }
}

@keyframes rotateArrowLine {
  50% {
    transform: rotate(30deg);
  }

  80% {
    transform: rotate(55deg);
  }
}

@keyframes rotateArrowLine2 {
  50% {
    transform: rotate(330deg);
  }

  80% {
    transform: rotate(300deg);
  }
}

@keyframes resetArrow {
  0% {
    transform: translateX(-128px);
  }

  100% {
    transform: translateX(0);
  }
}

@keyframes rotate-arrow-line-path {
  from {
    stroke: var(--primary-text-color);
  }

  to {
    stroke-dashoffset: -480;
    stroke: var(--primary-text-color);
  }
}

@keyframes button-arrow-splash-effect {
  to {
    stroke-dasharray: 2 60;
    stroke-dashoffset: -60;
  }
}